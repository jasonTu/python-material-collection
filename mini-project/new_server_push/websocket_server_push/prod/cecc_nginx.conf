
user  skynet;
#worker_processes  1;
worker_processes  4;

#worker_rlimit_nofile 65535;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
# error_log  logs/error.log  info;

#pid        logs/nginx.pid;

worker_rlimit_nofile 10000;

events {
    worker_connections  10000;
}


http {
    include       /usr/skynet/nginx/conf/mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    # access_log  logs/access.log  main;
    access_log /dev/null;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  300;

	client_max_body_size 50m;

	#add for uwsgi avoid timeout
	uwsgi_connect_timeout 65;
	uwsgi_send_timeout    65;
	uwsgi_read_timeout    65;
	#uwsgi_buffer_size     64k;
	#uwsgi_buffers       4 64k;
	#uwsgi_busy_buffers_size  128k;
	#uwsgi_temp_file_write_size 128k;

    push_stream_message_ttl 300;
    push_stream_shared_memory_size 768m;

	#
	#
	#
	#add end

    #gzip  on;

    server_tokens off;

    server {
        listen       80;
        server_name  localhost;

        #ssl                  on;
        #ssl_certificate      /home/work/skynet/src/https/localhost.crt;
        #ssl_certificate_key  /home/work/skynet/src/https/localhost.key;

        #ssl_session_timeout  5m;

        #ssl_protocols  SSLv2 SSLv3 TLSv1;
        #ssl_ciphers  HIGH:!aNULL:!MD5;
        #ssl_prefer_server_ciphers   on;


        #charset koi8-r;

        #access_log  logs/host.access.log  main;
        location / {
		    root html;
			index index.html index.hm;		
		}

        location /broadcast {
            proxy_redirect off;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Scheme $scheme;
            proxy_pass https://127.0.0.1:443;
            expires 0;
        }
        #location /DevHeart/V1.0/ {
        #    include /usr/skynet/nginx/conf/uwsgi_params;
        #    uwsgi_pass 127.0.0.1:9092;
        #}
        location /DevAPI/V1.0/ {
            uwsgi_pass unix:///tmp/uwsgi_devapi.socket;
            include /usr/skynet/nginx/conf/uwsgi_params;
        }
        location /devmgmt/v1.0/ {
            uwsgi_pass unix:///tmp/uwsgi_devmgmt.socket;
            include /usr/skynet/nginx/conf/uwsgi_params;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    server {
         listen       443;
        server_name  localhost;

        ssl on;
        ssl_certificate /usr/skynet/DevReg/server/https/localhost.crt;
        ssl_certificate_key /usr/skynet/DevReg/server/https/localhost.key;
        #ssl_client_certificate  /home/work/skynet/src/https/ca.crt;

		#ssl_verify_client on;

   #    listen       443;
    #    server_name  localhost;

    #    ssl                  on;
    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_timeout  5m;

         ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;
    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers   on;

        location /DevReg/V1.0/ {
            uwsgi_pass unix:///tmp/uwsgi_devreg.socket;
            include /usr/skynet/nginx/conf/uwsgi_params;
        }
        location /DevChannel/V1.0/ {
            uwsgi_pass unix:///tmp/uwsgi_devchannel.socket;
            include /usr/skynet/nginx/conf/uwsgi_params;
        }
		
            location  /broadcast/sub {
                push_stream_subscriber websocket;
                push_stream_channels_path $arg_channel;
                push_stream_websocket_allow_publish         on;
                push_stream_ping_message_interval           10s;
		    }
			location  /broadcast/pub {
                push_stream_publisher admin;
                push_stream_channels_path $arg_channel;
			}
	}
	server {
        listen       8443;
        server_name  localhost;

        ssl                  on;
        ssl_certificate      /usr/skynet/DevReg/server/https/localhost.crt;
        ssl_certificate_key  /usr/skynet/DevReg/server/https/localhost.key;
        ssl_client_certificate  /usr/skynet/DevReg/server/https/ca.crt;

		ssl_verify_client on;
        #http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/elb-security-policy-table.html
        #To solve Logjam (CVE-2015-4000), bellow use policy of 2016-08.
        ssl_protocols  TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:AES128-GCM-SHA256:AES128-SHA256:AES128-SHA:AES256-GCM-SHA384:AES256-SHA256:AES256-SHA';


        location /DevReg_ICS/V1.0 {
            #root   html;
            #index  index.html index.htm;
            #uwsgi_pass unix:/tmp/web.py.socket;
			
                        include /usr/skynet/nginx/conf/uwsgi_params;
                        uwsgi_pass unix:///tmp/uwsgi_devreg.socket;
                        #uwsgi_param UWSGI_CHDIR /usr/skynet/DevReg/server;
                        #uwsgi_param UWSGI_PYHOME /usr/skynet/DevReg/server;
                        #uwsgi_param UWSGI_SCRIPT service;
			
			#uwsgi_param HTTPS on;
			#expires 0;
			#uwsgi_param UWSGI_CHDIR /home/work/skynet/server;
			#uwsgi_param UWSGI_SCRIPT webpytest;
		}


    }
   server {
        listen       8086;
        server_name  localhost_8086;
        location /DevReg_ICS/V1.0 {
            include /usr/skynet/nginx/conf/uwsgi_params;
            uwsgi_pass unix:///tmp/uwsgi_devreg.socket;
        }
    }
}
